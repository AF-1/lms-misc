-- PlaylistName:* Rated - by DECADE (with % of Rated HIGH)
-- PlaylistGroups:
-- PlaylistParameter1:customdecade:Select decade:select floor(tracks.year/10)*10,case when tracks.year>0 then concat(floor(tracks.year/10)*10,'s') else 'Unknown' end from tracks where tracks.audio=1 group by floor(tracks.year/10)*10 order by tracks.year desc
-- PlaylistParameter2:list:Select percentage of TOP Rated Songs:0:0%,10:10%,20:20%,30:30%,40:40%,50:50%,60:60%,70:70%,80:80%,90:90%,100:100%

DROP TABLE IF EXISTS randomweightedratingshigh;
DROP TABLE IF EXISTS randomweightedratingslow;
DROP TABLE IF EXISTS randomweightedratingscombined;

create temporary table randomweightedratingslow as select tracks.url as url from tracks
	join tracks_persistent on
		tracks.url=tracks_persistent.url and tracks_persistent.rating <= 49
	left join comments as excludecomments on
		tracks.id=excludecomments.track and excludecomments.value like '%%never%%'
	left join dynamicplaylist_history on
		tracks.id=dynamicplaylist_history.id and dynamicplaylist_history.client='PlaylistPlayer'
	where
		audio=1
		and tracks.year>='PlaylistParameter1' and tracks.year<'PlaylistParameter1'+10
		and excludecomments.id is null
		and tracks.secs>90
		and dynamicplaylist_history.id is null
		and not exists (select * from tracks t2,genre_track,genres
						where
							t2.id=tracks.id and
							tracks.id=genre_track.track and
							genre_track.genre=genres.id and
							genres.name in ('Classical','Soundtrack'))
	order by random()
	limit (100-'PlaylistParameter2');


create temporary table randomweightedratingshigh as select tracks.url as url from tracks
	join tracks_persistent on
		tracks.url=tracks_persistent.url and tracks_persistent.rating >= 50
	left join comments as excludecomments on
		tracks.id=excludecomments.track and excludecomments.value like '%%never%%'
	left join dynamicplaylist_history on
		tracks.id=dynamicplaylist_history.id and dynamicplaylist_history.client='PlaylistPlayer'
	where
		audio=1
		and tracks.year>='PlaylistParameter1' and tracks.year<'PlaylistParameter1'+10
		and excludecomments.id is null
		and tracks.secs>90
		and dynamicplaylist_history.id is null
		and not exists (select * from tracks t2,genre_track,genres
						where
							t2.id=tracks.id and
							tracks.id=genre_track.track and
							genre_track.genre=genres.id and
							genres.name in ('Classical','Soundtrack'))
	order by random()
	limit 'PlaylistParameter2';

create temporary table randomweightedratingscombined as
	SELECT * FROM randomweightedratingslow
	UNION
	SELECT * from randomweightedratingshigh;

SELECT * from randomweightedratingscombined
	ORDER BY random()
	limit 20;

DROP TABLE randomweightedratingshigh;
DROP TABLE randomweightedratingslow;
DROP TABLE randomweightedratingscombined;
